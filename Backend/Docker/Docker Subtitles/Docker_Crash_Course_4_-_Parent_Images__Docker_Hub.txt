so my friends now we know a little bit about what an image is and what a container is as well i'd like to briefly talk about how images are made so to begin with images are made up of different layers where each layer essentially adds something else to the image incrementally so the order of the layers does matter and typically what we do is start with what's known as a parent image as the first layer in our own image so this layer typically describes the operating system and the runtime environment of the container that we want so you could have a parent image which has a specific node version installed like node 17 or 16 on a linux distribution and this layer in itself is a docker image already pre-made so we're just creating a new image on top of that so that's the initial layer normally a parent image which typically includes a lightweight operating system and a runtime environment the next layers that we build on top of that initial one can be anything else that we would add to our image such as copying source code to the image installing dependencies on the image or specifying any initial scripts that need to run etc now we'll talk more about those additional layers later on but for now i just want to focus on this initial parent image layer and how we'd get this parent image so when you work with docker and parent images you'll also be working with something called docker hub which you can find at hub.docker.com now docker hub is basically an online repository of docker images and it's a bit like github but for docker instead and it contains a ton of pre-made parent images that we can use as the first layer in our own images and we can search for and download these pre-made images to our computer if we want to and i'm going to show you how to do that later on but first let's imagine we want to create a new doc image for a project and it needs to run in a node environment well then the initial layer of our image would be a parent node image and we can get that image from docker hub right here so i could just type in node into the search bar and hit enter to search for node images and when we do that we can see this result right here for node which says it's the official image for node as well and by the way you can also see here that there's an image for mongodb as well so that can be downloaded and run as well and there's loads more pre-made images too for things like strappy or wordpress or mysql etc anyway let's have a look at this node image and see how we can download it so first of all on the right we can see how to essentially download this image or rather in docker terms pull the image so we do that by typing this command into a terminal but before we do that if we scroll down a bit we can see all these different tags supported by this node image and these tags are basically different variations of the node image that we can use and they specify a specific node version and also an underlying linux distribution so when we specify we want to use the node image we can add a tag on the end as well to specify which version of node that we want and also which linux distribution it should run on top of now one of those is called alpine which is a really lightweight linux distribution so that's the one that we'll be using but there are also other distributions that we can use as well so we could specify for example node version 17 and alpine and by the way it's always beneficial to specify a node version to lock that version into your image otherwise it will always grab the latest one and that can change over time right so again when we make our own images the first layer of those images is normally apparent image like this and it doesn't have to be a node image it could be a python or php or ruby or something else entirely image but if we were making a node application it would be the node image that would use so now let's try downloading this node image and running it just as it is so what i'm going to do is first of all copy this command right here docker pull node and then i'm going to open up some kind of terminal and let me just zoom in here and what we're going to do is paste that command in now it doesn't matter where we are in the terminal what directory because it's not going to install that image into this directory docker is going to store it in a special place so i'm going to paste in docker pull node and then press enter to install that and you can see it's using now the default tag right here which is latest so if we don't specify a tag a specific version of node then it's going to pull in the latest version for us automatically all right then so once that's downloaded if you head on over to docker hub and go to images you should be able to see this image right here node that's the one we just pulled down and also this tag right here latest now that's kind of the default tag and that's because we didn't specify a specific version of node or linux distribution so if we don't do that it just kind of downloads that default node image for us instead and that's going to include the latest version of node.js as well now if we hover over this you can click on run and that's going to run this image to create a container now remember i said before that this is going to be used as kind of like the initial layer in our own image so this parent image right here however this in itself is just an image and i said that they can be run as well so we can run this node image to spin up a container now which is going to kind of contain a linux environment or a linux distribution and node installed into it okay so we can click on this run button right here to do that now later on i am going to show you how to do this from the command line as well but for now let's just run it from here and when we do that we get these additional options but i'm not going to do anything with those yet so just run as is and now it takes us to the containers where we can see this container right here and it's giving this some kind of random name as well so this container is now running and if we go back to images we can see that this node image is in use meaning we're now using it inside this container now if we hover over this we get lots of different options over here we can stop the container restart the container we can delete it but also we can enter into a command line interface to interact with that container as well so i could interact with that linux environment and also use node as well inside here so it's going to open up a terminal and i can use any linux commands inside here for example ls to list out the contents of the current directory the root directory i'm in and we can see all of those folders here i can also use node by tapping node and it says welcome to node version 17.4 so that's the version of node installed and i could type now any kind of node commands inside this interactive terminal so i could say for example 5 plus 10 and that's going to give me 15 right so this is fine but on its own it's kind of useless right so what i'd like to do is use this now as a parent image inside our own images that we make ourselves right so remember i said the images are made up of layers and this parent image would be the first layer in our own image so then we'd have the correct node version running for it and then we'd build up additional layers on top of that like copying in our source code to the image installing dependencies to the image etc so next up we'll see how to create our own image using a node image as a parent image but we might pull a different version of the node image just to specify a specific linux distribution alpine and also a specific node version as well now to do all that we're going to need to use what's called a dockerfile and we're going to talk about that in the next lesson