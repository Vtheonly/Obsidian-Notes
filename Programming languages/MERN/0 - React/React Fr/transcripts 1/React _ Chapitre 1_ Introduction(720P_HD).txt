 Salut et bienvenue dans cette nouvelle formation consacrée à l'apprentissage de React. Alors React, qu'est-ce que c'est si on en suit la définition du site, c'est une nibré Rijavascript qui va vous permettre de créer des interfaces utilisateurs. Alors cette définition, je pense qu'elle n'aide pas forcément à comprendre ce qu'est React. Et la meilleure manière de comprendre pourquoi on va utiliser cette nibré Rij, c'est plutôt d'essayer de comprendre la problématique que l'on rencontre à l'heure actuelle. Alors on va prendre un petit exemple concret qui va permettre d'illustrer la problématique. Imaginons, on va envie de créer un petit système de tout douliste. La principale problématique que l'on va rencontrer, c'est qu'on va devoir essayer de synchroniser l'état de notre application, c'est-à-dire la liste des tout doulistes, avec l'interface utilisateur, ici le dom. Donc par exemple, quand je rajoute un nouvel élément à ma tout doulist, il va falloir que je crée un nouveau Ali, avec un intérieur le texte de notre tâche à faire, ensuite on va créer un bouton qui permettra de supprimer cette tâche et de la même manière qu'en je supprimerai la tâche, il faudra supprimer le Ali. Donc très rapidement, on fera mesure que votre application monte en complexité, vous allez vous retrouver avec des tonnes et des tonnes de manipulation du dom et ça va être très difficile à maintenir au risque parfois même de ce qu'assez l'agre. Donc c'est là que React est intéressant parce qu'il va vous permettre de mieux organiser votre interface utilisateur en séparant l'état et le fonctionnement de votre vue, l'interface. Donc si on prend un exemple ici de composant React, rassurez-vous on va en parler un petit peu plus en profondeur dans cette formation, mais c'est pour vous donner un autre idée. On a ici un état qui permet de représenter l'état de notre interface. Ici on met simplement la liste des toutes. Ensuite on va avoir différentes fonctions, par exemple une fonction Adit-Tem, qui va permettre de rajouter un élément dans notre état. Rimouvi-Tem qui va pas être de supprimer, edit-it-Tem qui va permettre de modifier, ainsi de suite ainsi de suite. En fait on aura une fonction Render qui automatiquement rendra la nouvelle version de notre interface. Donc à chaque fois que l'état va changer, automatiquement l'interface que va rendre React va être différente. Donc le gros avantage c'est que ça permet de représenter notre vue comme une fonction de l'état. Donc on est plus obligé de s'embêter à maintenir une synchronisation entre l'état et le dom, c'est React qui va s'en occuper pour nous, et c'est ça qui est intéressant. En maintenant on peut se demander finalement pourquoi utiliser React plutôt que d'autres livrers réigés, entendu parler de VGS, Zélt, Embula, Rembert, pourquoi React va être intéressant. Alors déjà il faut savoir que React n'est pas nécessairement le meilleur des frameworks. C'est un framework qui est différent, son approche est différente, et c'est ça qui l'aura intéressant. Ça ne veut pas forcément dire qu'il est meilleur que VGS, meilleur que Zélt, ou même pour ce qu'elle a trop framework. Il est juste différent. J'incite ce sur ce point parce que beaucoup de gens sont en recherche du meilleur framework, sachez que ça n'existe pas. Donc maintenant quel sont les particularités de React ? La première c'est que React est simple en surface. Ça veut dire qu'au niveau des fonctions qui vont vous être offertes, il y en a assez peu à connaître, si on compare à Angular par exemple Rembert, qui font des tonnes et des zones de choses. Le nombre de fonctions disponibles au niveau de React sont relativement limitées. Attention par contre, ça ne veut pas dire que React est simple pour autant. Vous allez voir qu'il y a quelques concepts qui ne sont pas forcément évidentes, mais vous avez peu de choses à connaître par rapport à React. Ensuite, ce qui est intéressant c'est d'écosystèmes. React est là depuis pas mal de temps, il change assez peu les choses au fil du temps. Donc l'écosystème a eu le temps de se construire autour. Donc on va notamment avoir différents adapteurs pour brancher React. On va avoir React Dom pour faire des modifications niveaux du Dom, React native pour concevoir des applications native, React desktop pour créer des applications desktop, on va avoir beaucoup de choses qui sont offertes autour de React. Et de la même manière, on va avoir beaucoup de libres riz pour créer des composants et du conneur utilisable. Ensuite, on va avoir une syntaxes spécifiques qui s'appelle GSX, que l'on verra un petit peu plus tard, qui est une syntaxe qui est juste une toute petite extension aux Jamascript. Donc par rapport à d'autres frameworks, comme Zvelle, tout au vu qui vous oblige à apprendre tout à nouveau système de template, GSX est plutôt simple à appréhender. Alors par contre, c'est quelque chose qui ne plaira pas forcément à tout le monde. Certains préféron la syntaxe de Zvelle ou de VGS justement. Enfin, et je pense que c'est le point le plus important. Finalement, c'est avant tout une préférence personnelle au niveau de la manière d'écrer du code, React propose une approche qui est spécifique et qui conviendra certains développeurs et qui ne conviendra pas à d'autres. Donc si il faut faire, et j'assiste sur ce point, c'est essayer peut-être d'autres frameworks et faites-vous votre propre opinion. Ne vous dites pas, je choisis React, je vais apprendre React à Z, et je ne découvrirai pas les autres frameworks. N'hésitez pas peut-être par exemple à commencer une formation sur React, puis commencer une formation VGS pour comparer un petit peu les deux et vous faire votre propre opinion. Ne vous bassez pas du tout sur l'opinion de quelqu'un d'autre pour justement choisir un framework. Alors maintenant, pourquoi cette formation, il en existe déjà sur Internet, qu'est-ce que je vais apporter de différents par rapport à d'autres choses ? Personnellement, sur les formations que j'ai pu voir, le problème qui apparaît assez souvent c'est qu'il se lance tout de suite tête baissée dans le code, sans forcément expliquer les concepts derrière. Donc l'objectif dans cette formation, c'est d'essayer d'entrer un petit peu plus en profondeur sur ce qu'est React et d'essayer d'apps de comprendre les outils avant de les apprendre. Donc on va essayer de mieux comprendre ce qu'est un élément React, la différence entre React et React d'Homme, plutôt que tout de suite, lancer une commande pour commencer à coder. Enfin, les pré-requits pour suivre cette formation dans des bonnes conditions, il faut que vous soyez et s'il s'est impératif, a l'aise avec le JavaScript. Si vous ne comprenez pas bien le JavaScript et que vous l'ensez d'un React, vous allez rencontrer problème après problème. React par certains aspects est assez complexe et si en plus vous cumulait des problématiques et des lacunes sur le JavaScript, ça ne va pas du tout vous aider. Donc il faut déjà que la syntaxe que vous voyez à l'écran, vous la compreniez, que vous soyez à l'aise avec qu'est ce que veut et vice. Quand je fais un AdMineVisner, que représente vice, à quoi sert le bind par exemple et ce genre de choses. Sinon, vous allez vraiment, vraiment galérer et je vous déconseille dessus de cette formation sans avoir de bons acquis en JavaScript. Ceci est en dit, je vous donne rendez-vous dans le premier chapitre. Nous allons créer notre premier élément React et on va essayer de découvrir un petit peu son fonctionnement.