 Bravo à tous ceux qui sont arrivés jusqu'au bout de cette formation, je vous félicite, c'était pas forcément quelque chose de très évident, mais vous savez maintenant l'ensemble des bases qu'il y a connaître sur React, mais ça ne veut pas forcément dire que votre exploration de React est fini pour autant. Alors, faire quoi vous pouvez vous tourner maintenant, vous avez, je dirais, deux pistes que vous pouvez adopter. La première, c'est d'essayer de pratiquer un petit peu React pour commencer à avoir les problèmes d'organisation et essayer de mettre en place des projets concrets pour aussi découvrir les limitations que vous avez. À partir de ces limitations, vous allez pouvoir chercher des solutions qui vous amèneront un délibré réccepécifique, comme des libréries de gestion d'état, des libréries d'animation, des libréries d'interface, c'est ainsi de suite, ainsi de suite. Ce que vous pouvez faire aussi, c'est directement chercher ces libréries et voir si il y a des choses qui vous intéressent. Je vais vous donner quelques pistes. Vous pouvez regarder les libréries d'interface, donc il n'en existe pas mal qui utilise React. Donc l'avantage c'est que ce sont des choses qui sont relativement simples à prendre vous l'installer et ça vous donne accès à différents composants que vous allez pouvoir ensuite utiliser. Par exemple dans le cadre de chaque râme, si je veux mettre en place un système d'accord des hommes, il faut que j'importe ces différentes choses et ensuite je peux utiliser comme ça. Donc l'avantage de ces frameworks-classes est que globalement, il vous offre tout un temps de composants qui sont déjà faits et que vous pouvez utiliser pour avoir un design qui est cohérent. Par rapport à ce qu'on a fait dans cette formation ou à chaque fois en écrivez les choses ou même, ça peut nous permettre de gagner pas mal de temps. Donc il n'en existe pas mal, moi les plus connus, c'est chaque râme 8 et matérie 8. Désolé si j'en oublie. Ensuite, ce que vous pouvez faire c'est regarder les outils qui vont vous permettre de gérer des états. Donc un des outils qui est très populaire, c'est Redux. Aujourd'hui, il est un petit peu moins intéressant parce que finalement avec la nouvelle API des contextes on peut s'en passer pour beaucoup de situations, mais Redux vous permet de gérer des états complexes et c'est très répandu. Donc si vous travaillez avec une équipe, il y a de fortes chances que vous tombiez sur ce frère-mort. Il y a un autre outil qui est un train de dévoluer, qui s'appelle Rikoil. Alors pour m'attaper réacte, sinon on ne va pas trouver grand chose. Donc Rikoil c'est un gestion d'état qui aussi peut être intéressant. Donc ça, c'est des outils qui vont être intéressants, si vous voulez avoir un état qui est partagé entre plusieurs composants sans forcément avoir un composant parent qui est commun. Aussi, ce que vous pouvez découvrir, c'est des routeurs. On l'avait dévu dans la partie Tp, nous on avait juste géré via une variable la page sur laquelle on était, mais ça peut être intéressant de gérer ça via des URLs. Donc vous avez deux choses. Vous avez React Router. Je dirais que c'est le plus connu parce que c'est le plus ancien. Vous avez aussi Rich qui en fait va vous permettre, va rajouter React, qui va vous permettre de gérer l'interface de votre application en fonction de l'URL sur laquelle on se trouve. Donc si vous regardez dans la partie exemple, maintenant que vous comprenez React, c'est plutôt simple. En fait, on va avoir une partie routeur et là on va lui dire, je veux que tu charge le composant homme si on est sur le chemin racine et si on est sur Dashboard, je veux que tu charge le composant Dashboard. Et quand on veut créer un lien, on peut utiliser simplement un composant qui sera fourni par le frame mort, qui sera link, qui permettra de gérer les liens. Donc ça, c'est très très sympa si vous voulez avoir une application qui réagit un fonction de l'URL et qui gère en plus les retours dans l'historique ce genre de chose. Enfin, dernier type de librairie ou doutique que vous pouvez regarder, ce sont vraiment des frame orques à ce niveau-là qui sont NextGS et Gatsby. Donc ça, ce sont des outils qui vous permettent d'utiliser React à la fois pour le fronte mais aussi pour le bac. Donc ça permet de remédier à un problème majeur qu'on, les applications qui sont entièrement faites en javascript, qui est qu'au chargement initial, en fait, on charge une coquille vie de le temps que le javascript se met en place. Donc ces outils-là vous permettent de pouvoir avoir un chargement plus rapide et aussi de générer des sites statiques dans le cas de Gatsby et Next et dynamique dans le cas de Next avec durant du côté serveur. Donc ça, ce sont des choses beaucoup plus poussées mais vous pouvez vous y intéresser. Maintenant que vous avez les bases de React, vous devriez être en mesure de comprendre ce qui se passe derrière. Dans tous les cas, si vous avez des librairies ou des choses que vous aimeriez bien voir développées, n'hésitez pas à m'en faire part. Je compte enregistrer une nouvelle formation pour parler de l'écosystème autour de React. Donc l'objectif de cette seconde formation sera de vous présenter certains éléments et certaines librairies spécifiques qui sont intéressantes au temps d'apprentissage de React. Donc j'espère que cette formation vous a plu et que les formations futures vous plairont et je vous donne rendez-vous dans ce une prochaine vidéo. Ciao !