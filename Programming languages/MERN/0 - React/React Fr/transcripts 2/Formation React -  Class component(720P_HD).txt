 Bonjour à tous et bienvenue à notre nouvelle épisode de notre formation React grâce à laquelle je vais leur apprendre ensemble à créer une application avec le framework React. Alors dans ce nouvel épisode, nous allons voir comment créer des classes component. Donc on va voir comment créer des composants à partir d'une classe. Pour commencer, dans notre dossier source ici, on va vraiment essayer de partir de 0. On va supprimer presque tout sauf de fichier, appp.gs et index.gs. Alors là par erreur, j'ai même eu que je peux mettre le dossier dans son entier, t'es désolé, je vais récréer le dossier. Je vais juste garder deux fichiers appp.gs et index.gs. Alors index.gs est notre point d'entrée. J'ai en commencer par app.gs. Alors quand vous l'aurez compris, on va commencer par les 3 étapes essentielles à la création d'un composant en React, premièrement il faut importer les modules dont on a besoin pour ce composant et par des faux tout composant à besoin du module React. Et là on va l'importer à partir de React. Mais je n'ai pas tout et tout nonu qu'on veut créer un composant avec une classe, on va devoir essayer de porter cette classe component, toujours de React. Et la plus amusée me grande étape c'est qu'il faut créer le composant. Alors on va faire ça de façon brave. class. Vous pouvez nommer la classe qu'on vous voulait, pour rester fidèle au nom du fichier je vais le nommer app. Alors je précise que d'un React il est de costume de commencer toujours par une lettre magie scule quand on veut nommer un composant. Et cette classe doit étendre la classe componente. Et lorsque l'encre est un composant avec une classe elle doit obligatement avoir au moins une méthode, que la méthode Render dans la valeur est tournée sera affichée à l'écran. La suppose on veut juste tourner cette balle d'yve, que les consciences sur par agrafes, le chute le composant app. Et à la fin de la dernière étape c'est exporté le composant pour le rendre d'une autre. Alors ici on va faire export. Des fautes on peut utiliser les espoirs par des fautes, les espoirs nommés, ça dépend de vous. Mais export default. Ah! Maintenant je sauve garde et je vois dans mon avégoctor ce que ça donne. Alors qu'on pouvait en déco, on ne peut pas accomplir le fichier index.js c'est tout simplement parce que ce fichier ne comprend rien. Alors j'ai créé ce composant, on va falloir la fichier. Je commence par l'importance. Ensuite je vais devoir utiliser le domes virtuelles de réacte et pour se faire je vais importiller à domes et je vais faire réacte d'hommes, rènes de quoi et puis pour. Alors affiche-moi le composant app ou ça document. Gaté de match by ID. Alors je vais m'édire pourquoi je mets route. Si vous avez d'un dossier public, index.html ouvrez qu'on a une ballise, dive avec un ID route. Alors grâce à repas que ce fonction derrière, il n'en est que notre plan d'intéresser index.js. On aura aucune erreur à la compilation. Alors la main-là, la difficulté c'est que pour récréer du Gsx, il va falloir qu'on ait obligatoirement réacte importé. Parce que le Gxx vous le rappelez bien, t'attends sur mon autre code en réacte.cliateelement. Alors si il n'y a pas réacte, ce sera compliqué pour ça que je vais devoir importiller réacte ici. Réacte. Alors là, je vais se vous garder. Et on voit ce que ça donne. Alors là vous voyez, ça m'affiche à l'écran. Je suis le composant app. Alors j'ai dû relancer mon séance d'éveloppement parce que et ton donné que j'avais supprimé les dossiers sources, il ne le trouvait plus à la compilation. Alors ça sera déjà tout pour cette vidéo. Dans la prochaine vidéo, on va voir ensemble comment afficher une liste grâce à réacte. En ce que vous voit très prochainement, dis-ci là, portez-vous bien, likez la vidéo sous vous la VMA, laissez-moi le commentaire si vous en avez, partagez-la autour de vous, et abonnez-vous à la chaîne si vous n'en est pas encore fait. A plus!