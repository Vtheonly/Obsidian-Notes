 Bonjour à tous et bienvenue dans ce nouvel épisode de l'information react dans laquelle nous allons apprendre ensemble à créer des applications avec le frein moire react. Alors dans ce nouvel épisode nous allons voir ensemble la 4ème étape de notre philosophie de pensée en réacte la qu'elle philosophie est recommandée par les développeurs react. Alors cette 4ème étape consiste à identifier où chaque state doit vivre. Cette formation vous permettra de construire votre propre Netflix dans lequel chaque utilisateur pourra accéder à une liste des films. Il pourra ajouter des films à sa liste de sué. Il pourra chercher les films qu'il souhaite. Il pourra voir les détails de chaque film. Il pourra visionner en ligne ces films. Et en plus cette application qui nous allons construire vous permettra de gagner de l'argent parce que chaque utilisateur devra s'abonner et vous paiez via PayPal pour pouvoir lire un film. Alors pour s'effer on va se baser sur 4 petites étapes. Je peux dire ça ici. On va commencer par identifier chaque composant qui rend en fonction de ce state. Alors si il arrive il y a plusieurs composants qui rendent en fonction de ce state. On va devoir chercher un composant propriétaire commun. Elle en sait en quelque sorte. Et le propriétaire de ce state en quelque sorte le state devra vivre dans cette commun ou un composant qui est situé un peu plus haut d'un hiérarché. Et si on ne trouve pas dans cette commune alors on va devoir créer un composant spécialement pour maintenir ce state. Alors je retourne dans le usage de code. Je commence par le composant box. On avait IsFormOppon. Cette propriétaire qui lui avait figure dans cette state. Maintenant reste à savoir où est ce que ce state devra vivre. Alors IsFormOppon. Quelle est le composant qui rend en fonction du IsFormOppon. C'est bien sûr ActionContainer. Alors dans ActionContainer on voit que on a du contenu qui rend du conditionnellement en fonction des IsFormOppon. Et à part ActionContainer il n'y a aucun composant qui utilise IsFormOppon. Alors je précise que c'est deux. Il y a IsFormOppon et celui-ci sont bien les bien différents. Je ne réponds pas par exemple c'est si dans IsEditFormOppon c'est de propriété complètement différente. Et celle-ci n'utilisez que par ActionContainer ce qui fait que IsFormOppon figure dans les tests de ActionContainer. Et quand je viens dans le listes container, j'ai IsFormOppon qui est utilisée par le composant container. Je vais dans le container bien sûr et il n'y a que ce composant container qui utilise ce qui veut dire que ce state devra aussi dans Container. Bien sûr, Time Forme renouveler notre state pour les champs contrôlés et aussi toutes ses propriétés vivront de le composant de box envers à plus tard. Alors ça sera déjà tout pour cette vidéo. Dans la prochaine vidéo on va ensemble coder le contenu minimal du state qui est en fait la 5ème étape de penser en réacte. Alors d'ici l'apportez-vous bien, l'aikai la vidéo si vous l'avez aimé, partagez-le autour de vous, laissez-moi les commentaires si vous en avez. Et surtout abonnez-vous à la chaîne si ce n'est pas encore fait à plus.